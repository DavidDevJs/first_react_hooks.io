{"version":3,"sources":["context/ThemeContext.js","components/Header.jsx","components/Characters.jsx","App.jsx","index.js"],"names":["ThemeContext","React","createContext","children","useState","defaultContext","theme","setTheme","Provider","value","Header","useContext","changeTheme","e","target","className","onClick","type","Characters","characters","setCharacters","page","setPage","url","useEffect","fetch","then","response","json","data","results","map","character","src","image","alt","name","species","origin","status","location","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLACaA,EAAeC,IAAMC,gBAEnB,cAAmB,IAAhBC,EAAe,EAAfA,SAAe,EACLF,IAAMG,SAAS,SADV,mBAGzBC,EAAiB,CACrBC,MAJ6B,KAK7BC,SAL6B,MAQ/B,OACE,cAACP,EAAaQ,SAAd,CAAuBC,MAAOJ,EAA9B,SACGF,KCwBQO,EAlCA,WAAO,IAAD,EACSC,qBAAWX,GAA/BM,EADW,EACXA,MAAOC,EADI,EACJA,SAETK,EAAc,SAACC,GACnBN,EAASM,EAAEC,OAAOL,QAGpB,OACE,sBAAKM,UAAS,iBAAYT,EAAZ,QAAd,UACE,oBAAIS,UAAS,+CAA0CT,EAA1C,QAAb,yBAGA,sBAAKS,UAAU,oBAAf,UACE,wBACEA,UAAS,kMACTN,MAAM,QACNO,QAASJ,EACTK,KAAK,SAJP,mBAQA,wBACEF,UAAS,4BAAuBT,EAAvB,0LACTG,MAAM,OACNO,QAASJ,EACTK,KAAK,SAJP,yBCqCOC,MA1Df,WAAuB,IAAD,EACgBd,mBAAS,IADzB,mBACbe,EADa,KACDC,EADC,OAEIhB,mBAAS,GAFb,mBAEbiB,EAFa,KAEPC,EAFO,KAGZhB,EAAUK,qBAAWX,GAArBM,MAEFiB,EAAG,0DAAsDF,GAQ/D,OANAG,qBAAU,WACRC,MAAMF,GACHG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUT,EAAcS,EAAKC,eAIrC,sBAAKf,UAAS,aAAQT,EAAR,QAAd,UACE,oBAAIS,UAAU,mDAAd,SACGI,EAAWY,KAAI,SAACC,GACf,OACE,+BACG,IACD,sBAAKjB,UAAU,gBAAf,UACE,qBACEA,UAAU,eACVkB,IAAKD,EAAUE,MACfC,IAAKH,EAAUI,OAEjB,sBACErB,UAAS,aAAQT,EAAR,gDAAqDA,EAArD,QADX,UAGE,4BAAI0B,EAAUI,OACd,4BAAIJ,EAAUK,UACd,4BAAIL,EAAUM,OAAOF,OACrB,4BAAIJ,EAAUO,SACd,4BAAIP,EAAUQ,SAASJ,eAfpBJ,EAAUS,SAuBzB,wBACEzB,QAAS,kBAAMM,EAAQD,EAAO,IAC9BN,UAAU,qEAFZ,uBAOA,wBACEC,QAAS,kBAAMM,EAAQD,EAAO,IAC9BN,UAAU,sEAFZ,+BCrCS2B,MATf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.1a3c0a60.chunk.js","sourcesContent":["import React, { useState } from 'react';\nexport const ThemeContext = React.createContext();\n\nexport default ({ children }) => {\n  const [theme, setTheme] = React.useState('light');\n\n  const defaultContext = {\n    theme,\n    setTheme,\n  };\n\n  return (\n    <ThemeContext.Provider value={defaultContext}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { ThemeContext } from '../context/ThemeContext';\n\nconst Header = () => {\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  const changeTheme = (e) => {\n    setTheme(e.target.value);\n  };\n\n  return (\n    <div className={`p-6 bg-${theme}-300`}>\n      <h1 className={`text-6xl text-center font-bebas text-${theme}-400`}>\n        React_Hooks\n      </h1>\n      <div className=\"flex items-center\">\n        <button\n          className={` text-white bg-green-600 border border-solid border-green-500 hover:bg-green-500 hover:text-white font-bold uppercase px-6 py-1 mx-auto rounded-full outline-none focus:outline-none text-withe`}\n          value=\"light\"\n          onClick={changeTheme}\n          type=\"button\"\n        >\n          light\n        </button>\n        <button\n          className={` text-gray-700 bg-${theme}-200 border border-solid border-green-500 hover:bg-green-500 hover:text-white active:bg-green-600 font-bold uppercase px-6 py-1  rounded-full outline-none focus:outline-none mx-auto `}\n          value=\"dark\"\n          onClick={changeTheme}\n          type=\"button\"\n        >\n          Dark\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { ThemeContext } from '../context/ThemeContext';\n\nfunction Characters() {\n  const [characters, setCharacters] = useState([]);\n  const [page, setPage] = useState(1);\n  const { theme } = useContext(ThemeContext);\n\n  const url = `https://rickandmortyapi.com/api/character/?page=${page}`;\n\n  useEffect(() => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => setCharacters(data.results));\n  });\n\n  return (\n    <div className={`bg-${theme}-300`}>\n      <ul className=\"Characters grid grid-cols-1 sm:grid-cols-4 gap-4\">\n        {characters.map((character) => {\n          return (\n            <li key={character.id}>\n              {' '}\n              <div className=\"mx-auto w-max\">\n                <img\n                  className=\"rounded-t-sm\"\n                  src={character.image}\n                  alt={character.name}\n                />\n                <div\n                  className={`bg-${theme}-200 p-5 rounded-b-sm font-play text-${theme}-400`}\n                >\n                  <p>{character.name}</p>\n                  <p>{character.species}</p>\n                  <p>{character.origin.name}</p>\n                  <p>{character.status}</p>\n                  <p>{character.location.name}</p>\n                </div>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n\n      <button\n        onClick={() => setPage(page + 1)}\n        className=\"w-full p-3 mx-auto my-4 bg-green-600 h-15 text-grayLigth font-play\"\n      >\n        Next Page\n      </button>\n\n      <button\n        onClick={() => setPage(page - 1)}\n        className=\"w-full p-3 mx-auto my-4 bg-yellow-600 h-15 text-grayLigth font-play\"\n      >\n        Previous Page\n      </button>\n    </div>\n  );\n}\n\nexport default Characters;\n","//components\nimport Header from './components/Header';\nimport Characters from './components/Characters';\nimport ThemeContext from './context/ThemeContext';\n\nfunction App() {\n  return (\n    <ThemeContext>\n      <Header />\n      <Characters />\n    </ThemeContext>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//Tailwind\nimport './assets/index.css';\n\n//js\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}